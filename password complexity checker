import re

def check_password_strength(password):
    # Define criteria for password strength
    length_criteria = len(password) >= 8
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    lowercase_criteria = bool(re.search(r'[a-z]', password))
    number_criteria = bool(re.search(r'[0-9]', password))
    special_char_criteria = bool(re.search(r'[!@#$%^&*(),.?":{}|<>]', password))
    
    # Calculate password strength
    strength = 0
    if length_criteria:
        strength += 1
    if uppercase_criteria:
        strength += 1
    if lowercase_criteria:
        strength += 1
    if number_criteria:
        strength += 1
    if special_char_criteria:
        strength += 1

    # Debug: Print calculated strength
    print(f"Debug: Strength score is {strength}")
    
    # Provide feedback based on the score
    feedback = []
    if not length_criteria:
        feedback.append("Password should be at least 8 characters long.")
    if not uppercase_criteria:
        feedback.append("Password should include at least one uppercase letter.")
    if not lowercase_criteria:
        feedback.append("Password should include at least one lowercase letter.")
    if not number_criteria:
        feedback.append("Password should include at least one number.")
    if not special_char_criteria:
        feedback.append("Password should include at least one special character.")
    
    # Strength evaluation
    if strength == 5:
        strength_message = "Strong password."
    elif 3 <= strength < 5:
        strength_message = "Moderate password. Consider improving it based on the feedback."
    else:
        strength_message = "Weak password. Improve it significantly based on the feedback."
    
    return {
        "strength_score": strength,
        "strength_message": strength_message,
        "feedback": feedback
    }

# Example usage
if __name__ == "__main__":
    password = input("Enter your password: ")
    result = check_password_strength(password)

    print("\nPassword Strength:")
    print(f"Score: {result['strength_score']} / 5")
    print(f"Message: {result['strength_message']}")
    if result['feedback']:
        print("Feedback:")
        for tip in result['feedback']:
            print(f" - {tip}")

            
            
Enter your password: QWERmnbv123@
Debug: Strength score is 5

Password Strength:
Score: 5 / 5
Message: Strong password.
